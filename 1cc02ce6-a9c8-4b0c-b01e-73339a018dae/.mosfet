{
  "layout": "Area",
  "image": "image.png",
  "rdbmsId": "1cc02ce6-a9c8-4b0c-b01e-73339a018dae",
  "engine": "Collision",
  "insightName": "test",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"Collision\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME802093\u0027 ] ) ;Database ( Collision ) | Select ( SHEET1 , SHEET1__Age , SHEET1__Birthday , SHEET1__Name_1 , SHEET1__State_1 ) .as ( [ SHEET1 , Age , Birthday , Name_1 , State_1 ] ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( Age , Birthday , Name_1 , SHEET1 , State_1 ) .as ( [ Age , Birthday , Name_1 , SHEET1 , State_1 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Age\" , \"Birthday\" , \"Name_1\" , \"SHEET1\" , \"State_1\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Age ) ) , ( Select ( Age , Count ( Birthday ) , Count ( Name_1 ) , Sum ( SHEET1 ) , Count ( State_1 ) ) .as ( [ Age , CountofBirthday , CountofName_1 , SumofSHEET1 , CountofState_1 ] ) | Group ( Age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Age\" ] , \"value\" : [ \"CountofBirthday\" , \"CountofName_1\" , \"SumofSHEET1\" , \"CountofState_1\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Age , Count ( Birthday ) , Count ( Name_1 ) , SHEET1 , Count ( State_1 ) ) .as ( [ Age , CountofBirthday , CountofName_1 , SHEET1 , CountofState_1 ] ) | Group ( Age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Age\" ] , \"value\" : [ \"CountofBirthday\" , \"CountofName_1\" , \"SHEET1\" , \"CountofState_1\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Age ) ) , ( Select ( Age , Count ( Birthday ) , Count ( Name_1 ) , Sum ( SHEET1 ) ) .as ( [ Age , CountofBirthday , CountofName_1 , SumofSHEET1 ] ) | Group ( Age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Age\" ] , \"value\" : [ \"CountofBirthday\" , \"CountofName_1\" , \"SumofSHEET1\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Age , Count ( Birthday ) , Count ( Name_1 ) , SHEET1 ) .as ( [ Age , CountofBirthday , CountofName_1 , SHEET1 ] ) | Group ( Age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Age\" ] , \"value\" : [ \"CountofBirthday\" , \"CountofName_1\" , \"SHEET1\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Age ) ) , ( Select ( Age , Count ( Birthday ) , Count ( Name_1 ) ) .as ( [ Age , CountofBirthday , CountofName_1 ] ) | Group ( Age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Age\" ] , \"value\" : [ \"CountofBirthday\" , \"CountofName_1\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Age , Count ( Birthday ) , Count ( Name_1 ) ) .as ( [ Age , CountofBirthday , CountofName_1 ] ) | Group ( Age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Age\" ] , \"value\" : [ \"CountofBirthday\" , \"CountofName_1\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Age ) ) , ( Select ( Age , Count ( Birthday ) ) .as ( [ Age , CountofBirthday ] ) | Group ( Age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Age\" ] , \"value\" : [ \"CountofBirthday\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Age , Count ( Birthday ) ) .as ( [ Age , CountofBirthday ] ) | Group ( Age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Age\" ] , \"value\" : [ \"CountofBirthday\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Name_1 ) ) , ( Select ( Name_1 , Sum ( Age ) ) .as ( [ Name_1 , SumofAge ] ) | Group ( Name_1 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"SumofAge\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Name_1 , Age ) .as ( [ Name_1 , Age ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"Age\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Name_1 ) ) , ( Select ( Name_1 , Average ( Age ) ) .as ( [ Name_1 , AverageofAge ] ) | Group ( Name_1 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"AverageofAge\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Name_1 , Age ) .as ( [ Name_1 , Age ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"Age\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Name_1 ) ) , ( Select ( Name_1 , Max ( Age ) ) .as ( [ Name_1 , MaxofAge ] ) | Group ( Name_1 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"MaxofAge\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Name_1 , Age ) .as ( [ Name_1 , Age ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"Age\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Name_1 ) ) , ( Select ( Name_1 , Median ( Age ) ) .as ( [ Name_1 , MedianofAge ] ) | Group ( Name_1 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"MedianofAge\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Name_1 , Age ) .as ( [ Name_1 , Age ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"Age\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Name_1 ) ) , ( Select ( Name_1 , Sum ( Age ) ) .as ( [ Name_1 , SumofAge ] ) | Group ( Name_1 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"SumofAge\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Name_1 , Age ) .as ( [ Name_1 , Age ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"Age\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Name_1 ) ) , ( Select ( Name_1 , Average ( Age ) ) .as ( [ Name_1 , AverageofAge ] ) | Group ( Name_1 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"AverageofAge\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( Name_1 , Age ) .as ( [ Name_1 , Age ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Area\" , \"alignment\" : { \"label\" : [ \"Name_1\" ] , \"value\" : [ \"Age\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"showMenu\" : true } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"showMenu\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"lineStyleArea\" : { \"type\" : \"solid\" , \"width\" : \"3\" } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.lineStyleArea\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"watermark\" : \"MODIFIED\" } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.watermark\" ) ;Panel(0)|AddPanelOrnaments({\"showMenu\":true});Panel(0)|RetrievePanelOrnaments(\"showMenu\");"
}